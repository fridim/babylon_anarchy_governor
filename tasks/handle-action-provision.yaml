---
- name: Include role to get the sandbox credentials from the pool of sandboxes
  when: >-
    vars.anarchy_governor.vars.job_vars.cloud_provider | default('none') == 'ec2'
    and
    vars.anarchy_governor.vars.job_vars.__meta__.sandboxed | default(false) == true
  include_role:
    name: infra-aws-get-sandbox

- name: Call Ansible Tower job-runner to provision {{ anarchy_subject_name }}
  uri:
    url: https://{{ babylon_tower.hostname }}/api/v2/job_templates/job-runner/launch/
    url_username: "{{ babylon_tower.user }}"
    url_password: "{{ babylon_tower.password }}"
    force_basic_auth: true
    validate_certs: false
    method: POST
    return_content: true
    status_code: 201
    body_format: json
    body:
      extra_vars:
        job_vars: >-
          {{ vars.anarchy_subject.vars.job_vars | default({})
           | combine(vars.anarchy_governor.vars.job_vars, recursive=True)
           | combine({
               'ACTION': 'provision',
               '__meta__': {
                 'callback': {'token': anarchy_action_callback_token, 'url': anarchy_action_callback_url},
                 'deployer': {'entry_point': 'ansible/main.yml', 'timeout': 0},
                 'tower': {'action': 'provision'}
               }
             }, recursive=True)
          }}
  register: r_api_response
  # FIXME - Handle API errors
  #ignore_errors: true

- name: Set job launch id subject status for provision
  anarchy_subject_update:
    status:
      towerJobs:
        provision:
          launchJob: '{{ r_api_response.json.job | default(None) }}'
          launchTimestamp: '{{ anarchy_run_timestamp }}'
